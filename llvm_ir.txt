declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@a = dso_local global i32 1
@b = dso_local global i32 2
@c = dso_local global i32 3
@d = dso_local global i32 0
@e = dso_local global i32 3
@f = dso_local global i32 0
define dso_local i32 @double2(i32 %0) {
1:
    %2 = alloca i32
    store i32 %0, i32* %2
    %3 = load i32, i32* %2
    %4 = icmp eq i32 %3, 0
    br i1 %4, label %5, label %8

5:
    %6 = load i32, i32* %2
    %7 = mul i32 2, %6
    ret i32 %7
    br label %12

8:
    %9 = load i32, i32* %2
    %10 = sub i32 0, %9
    %11 = mul i32 2, %10
    ret i32 %11
    br label %12

12:
    ret i32 0
}

define dso_local i32 @add(i32 %0, i32 %1) {
2:
    %3 = alloca i32
    store i32 %0, i32* %3
    %4 = alloca i32
    store i32 %1, i32* %4
    %5 = alloca i32
    store i32 0, i32* %5
    %6 = load i32, i32* %3
    %7 = load i32, i32* %4
    %8 = add i32 %6, %7
    store i32 %8, i32* %5
    %9 = load i32, i32* %5
    ret i32 %9
}

define dso_local i32 @sub(i32 %0, i32 %1) {
2:
    %3 = alloca i32
    store i32 %0, i32* %3
    %4 = alloca i32
    store i32 %1, i32* %4
    %5 = alloca i32
    store i32 0, i32* %5
    %6 = load i32, i32* %3
    %7 = load i32, i32* %4
    %8 = sub i32 %6, %7
    store i32 %8, i32* %5
    %9 = load i32, i32* %5
    %10 = icmp sge i32 %9, 0
    br i1 %10, label %11, label %13

11:
    %12 = load i32, i32* %5
    ret i32 %12
    br label %13

13:
    %14 = load i32, i32* %5
    %15 = icmp sle i32 %14, 0
    br i1 %15, label %16, label %17

16:
    ret i32 0
    br label %17

17:
    ret i32 0
}

define dso_local void @print_none() {
0:
    ret void
}

define dso_local i32 @main() {
0:
    %1 = alloca i32
    store i32 0, i32* %1
    %2 = alloca i32
    %3 = alloca i32
    %4 = alloca i32
    %5 = alloca i32
    ret i32 0
}

