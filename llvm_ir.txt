declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@globalConstInt1 = dso_local global i32 1
@globalConstChar1 = dso_local global i8 97
@globalConstInt2 = dso_local global i32 2
@globalConstInt3 = dso_local global i32 3
@globalConstChar2 = dso_local global i8 98
@globalConstChar3 = dso_local global i8 99
@globalVarInt1 = dso_local global i32 4
@globalVarChar1 = dso_local global i8 100
@globalVarInt2 = dso_local global i32 5
@globalVarInt3 = dso_local global i32 6
@globalVarChar2 = dso_local global i8 101
@globalVarChar3 = dso_local global i8 102
define dso_local void @func1() {
    %1 = alloca i32
    store i32 1, i32* %1
    ret void
}
define dso_local i32 @func2() {
    ret i32 1
}
define dso_local i8 @func3() {
    %1 = trunc i32 97 to i8
    ret i8 %1
}
define dso_local void @func4(i32 %0) {
    %2 = alloca i32
    store i32 %0, i32* %2
    store i32 11, i32* %2
    ret void
}
define dso_local i32 @func5(i32 %0) {
    %2 = alloca i32
    store i32 %0, i32* %2
    %3 = load i32, i32* %2
    ret i32 %3
}
define dso_local i8 @func6(i32 %0) {
    %2 = alloca i32
    store i32 %0, i32* %2
    %3 = load i32, i32* %2
    %4 = add i32 %3, 1
    store i32 %4, i32* %2
    %5 = trunc i32 97 to i8
    ret i8 %5
}
define dso_local i32 @func7(i32 %0, i8 %1) {
    %3 = alloca i32
    store i32 %0, i32* %3
    %4 = alloca i8
    store i8 %1, i8* %4
    %5 = load i32, i32* %3
    %6 = add i32 %5, 1
    store i32 %6, i32* %3
    %7 = trunc i32 97 to i8
    store i8 %7, i8* %4
    ret i32 0
}
define dso_local i32 @main() {
    call void @putch(i32 50)
    call void @putch(i32 50)
    call void @putch(i32 51)
    call void @putch(i32 55)
    call void @putch(i32 49)
    call void @putch(i32 52)
    call void @putch(i32 52)
    call void @putch(i32 51)
    call void @putch(i32 10)
    %1 = alloca i32
    store i32 1, i32* %1
    %2 = alloca i8
    %3 = trunc i32 97 to i8
    store i8 %3, i8* %2
    %4 = alloca i32
    %5 = alloca i32
    %6 = alloca i8
    %7 = alloca i8
    %8 = call i32 @getint()
    store i32 %8, i32* %4
    %9 = call i32 @getchar()
    %10 = trunc i32 %9 to i8
    store i8 %10, i8* %6
    store i32 2, i32* %5
    %11 = trunc i32 98 to i8
    store i8 %11, i8* %7
    %12 = alloca i32
    store i32 1, i32* %12
    %13 = call i32 @func7(i32 1, i32 97)
    ret i32 0
}
